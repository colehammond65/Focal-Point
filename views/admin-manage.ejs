<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= settings.siteTitle || "Focal Point" %> - Manage Images & Categories
    </title>
    <% if (settings.favicon) { %>
        <link rel="icon" type="image/png" href="/uploads/<%= settings.favicon %>">
        <% } %>
            <link rel="stylesheet" href="/styles.css">
            <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js"></script>
</head>

<body>
    <%- include('partials/header', { showAdminNav: true, settings, loggedIn: true }) %>
        <div class="container">
            <div id="toast-container" class="toast-container"></div>
            <% if (typeof req !=='undefined' && req.query && req.query.msg) { %>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        showToast(<%= JSON.stringify(req.query.msg) %>);
                    });
                </script>
                <% } %>
                    <h1>Image & Category Management</h1>
                    <div class="admin-flex-row">
                        <!-- Upload Images Form -->
                        <section class="admin-card">
                            <h2>Upload Images</h2>
                            <form action="/upload" method="POST" enctype="multipart/form-data" class="admin-form">
                                <label for="image">Choose image(s):</label>
                                <p class="backup-note">Max 20 images at a time. Max 10MB per image. Supported formats:
                                    JPG, PNG, GIF.</p>
                                <div id="dropzone" class="dropzone" tabindex="0">Drag & drop images here or click to
                                    select</div>
                                <input type="file" name="images" id="image" multiple required style="display:none;">
                                <div id="preview" class="preview"></div>
                                <% if (categories.length> 0) { %>
                                    <label for="category">Select a category:</label>
                                    <select name="category" id="category" required>
                                        <% categories.forEach(cat=> { %>
                                            <option value="<%= cat.name %>">
                                                <%= cat.name.replace(/-/g, ' ' ).replace(/\b\w/g, c=> c.toUpperCase())
                                                    %>
                                            </option>
                                            <% }); %>
                                    </select>
                                    <% } else { %>
                                        <p class="admin-error">
                                            No categories found. Please create a category first using the form on the
                                            right.
                                        </p>
                                        <% } %>
                                            <button type="submit" class="btn btn-primary" <%=categories.length===0
                                                ? 'disabled' : '' %>>Upload</button>
                            </form>
                        </section>

                        <!-- Create Category Form -->
                        <section class="admin-card">
                            <h2>Create Category</h2>
                            <form action="/create-category" method="POST" class="admin-form row-gap">
                                <label for="newCategory" class="visually-hidden">New Category Name</label>
                                <input type="text" id="newCategory" name="newCategory" placeholder="New category name"
                                    required class="flex-1">
                                <button type="submit" class="btn btn-primary">Create</button>
                            </form>
                        </section>
                    </div>

                    <!-- Categories Section -->
                    <section class="admin-card admin-card-categories">
                        <h2>Categories</h2>
                        <% if (categories.length> 0) { %>
                            <div id="category-list">
                                <% categories.forEach(cat=> { %>
                                    <section class="admin-card category-accordion" data-cat="<%= cat.name %>">
                                        <div class="category-toggle" tabindex="0" draggable="true" aria-expanded="false"
                                            aria-controls="cat-<%= cat.name %>-panel"
                                            onclick="toggleCategoryPanel('<%= cat.name %>')">
                                            <span class="category-title">
                                                <%= cat.name.replace(/-/g, ' ' ).replace(/\b\w/g, c=> c.toUpperCase())
                                                    %>
                                            </span>
                                            <span class="accordion-arrow" aria-hidden="true">&#9654;</span>
                                        </div>
                                        <div class="category-panel hidden" id="cat-<%= cat.name %>-panel">
                                            <div class="category-grid">
                                                <div class="category-card">
                                                    <div class="options-row">
                                                        <div class="category-options-box">
                                                            <div class="category-options-title">Category Options</div>
                                                            <form action="/delete-category" method="POST"
                                                                class="no-margin">
                                                                <input type="hidden" name="category"
                                                                    value="<%= cat.name %>">
                                                                <button type="submit" class="delete-cat-btn"
                                                                    aria-label="Delete category"
                                                                    onclick="return confirm('Delete this category and all its images?');">Delete</button>
                                                            </form>
                                                            <form action="/rename-category" method="POST"
                                                                class="no-margin row-gap" style="margin-top:0.7rem;"
                                                                onsubmit="return confirm('Are you sure you want to rename this category?');">
                                                                <input type="hidden" name="oldName"
                                                                    value="<%= cat.name %>">
                                                                <input type="text" name="newName"
                                                                    placeholder="New category name" required
                                                                    minlength="2" maxlength="50" style="flex:1;">
                                                                <button type="submit"
                                                                    class="btn btn-secondary">Rename</button>
                                                            </form>
                                                        </div>
                                                        <div class="image-options-box">
                                                            <div class="image-options-title">Image Options</div>
                                                            <form class="bulk-delete-form"
                                                                onsubmit="return handleBulkDelete(event, '<%= cat.name %>')">
                                                                <button type="submit" id="bulkDeleteBtn-<%= cat.name %>"
                                                                    class="admin-action-btn btn btn-danger"
                                                                    disabled>Delete Selected</button>
                                                                <button type="button" id="setThumbBtn-<%= cat.name %>"
                                                                    class="admin-action-btn set-thumb-btn btn btn-secondary"
                                                                    disabled
                                                                    onclick="handleSetThumbnail('<%= cat.name %>')">
                                                                    Set as Thumbnail
                                                                </button>
                                                            </form>
                                                            <!-- Move Images Form -->
                                                            <form class="move-images-form"
                                                                onsubmit="return handleMoveImages(event, '<%= cat.name %>')">
                                                                <select name="toCategory" required>
                                                                    <option value="" disabled selected>Move selected
                                                                        to...</option>
                                                                    <% categories.forEach(otherCat=> { if (otherCat.name
                                                                        !== cat.name) { %>
                                                                        <option value="<%= otherCat.name %>">
                                                                            <%= otherCat.name.replace(/-/g, ' ' ) %>
                                                                        </option>
                                                                        <% } }) %>
                                                                </select>
                                                                <button type="submit"
                                                                    class="admin-action-btn btn btn-primary"
                                                                    id="moveImagesBtn-<%= cat.name %>"
                                                                    disabled>Move</button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    <div class="image-grid" data-cat="<%= cat.name %>">
                                                        <% (cat.images || []).forEach((img, i)=> { %>
                                                            <div class="img-item bulk-select-img-item" draggable="true"
                                                                data-filename="<%= img.filename %>" tabindex="0"
                                                                onclick="toggleImageSelect(this)"
                                                                onkeydown="if(event.key===' '||event.key==='Enter'){event.preventDefault();toggleImageSelect(this);}">
                                                                <img src="/images/<%= cat.name %>/<%= img.filename %>"
                                                                    alt="<%= img.alt_text %>">
                                                                <input type="text" class="alt-text-input ml-05"
                                                                    value="<%= img.alt_text %>" placeholder="Alt text"
                                                                    data-image-id="<%= img.id %>"
                                                                    aria-label="Edit alt text">
                                                            </div>
                                                            <% }); %>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </section>
                                    <% }) %>
                            </div>
                            <% } else { %>
                                <p>No categories found.</p>
                                <% } %>
                    </section>
                    <div id="saving-indicator" class="saving-indicator">Saving...</div>
        </div>
        <%- include('partials/dark-mode-toggle') %>
            <script src="/js/admin-manage.js"></script>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    var dropzone = document.getElementById('dropzone');
                    var fileInput = document.getElementById('image');
                    if (dropzone && fileInput) {
                        dropzone.addEventListener('click', function () {
                            fileInput.click();
                        });
                        dropzone.addEventListener('keydown', function (e) {
                            if (e.key === 'Enter' || e.key === ' ') {
                                e.preventDefault();
                                fileInput.click();
                            }
                        });
                        // Optional: Add dragover/leave styling
                        dropzone.addEventListener('dragover', function (e) {
                            e.preventDefault();
                            dropzone.classList.add('dragover');
                        });
                        dropzone.addEventListener('dragleave', function (e) {
                            e.preventDefault();
                            dropzone.classList.remove('dragover');
                        });
                        dropzone.addEventListener('drop', function (e) {
                            e.preventDefault();
                            dropzone.classList.remove('dragover');
                            if (e.dataTransfer.files && e.dataTransfer.files.length) {
                                fileInput.files = e.dataTransfer.files;
                                // Optionally trigger change event for preview
                                fileInput.dispatchEvent(new Event('change'));
                            }
                        });
                    }
                });
            </script>
            <script>
                function toggleCategoryPanel(catName) {
                    var toggle = document.querySelector('.category-accordion[data-cat="' + catName + '"] .category-toggle');
                    var panel = document.getElementById('cat-' + catName + '-panel');
                    if (!toggle || !panel) return;
                    var expanded = panel.classList.toggle('hidden');
                    toggle.setAttribute('aria-expanded', !expanded);
                    // Optionally rotate arrow
                    var arrow = toggle.querySelector('.accordion-arrow');
                    if (arrow) arrow.style.transform = expanded ? '' : 'rotate(90deg)';
                }

                // Optional: Keyboard accessibility for toggles
                document.addEventListener('DOMContentLoaded', function () {
                    document.querySelectorAll('.category-toggle').forEach(function (toggle) {
                        toggle.addEventListener('keydown', function (e) {
                            if (e.key === 'Enter' || e.key === ' ') {
                                e.preventDefault();
                                var catName = toggle.closest('.category-accordion').getAttribute('data-cat');
                                toggleCategoryPanel(catName);
                            }
                        });
                    });
                });
            </script>
            <script>
                // Toggle selection for bulk image actions
                function toggleImageSelect(imgDiv) {
                    imgDiv.classList.toggle('selected');
                    // Enable/disable bulk action buttons based on selection
                    var catName = imgDiv.closest('.category-accordion').getAttribute('data-cat');
                    var selected = document.querySelectorAll('.category-accordion[data-cat="' + catName + '"] .img-item.selected');
                    var bulkDeleteBtn = document.getElementById('bulkDeleteBtn-' + catName);
                    var setThumbBtn = document.getElementById('setThumbBtn-' + catName);
                    var moveImagesBtn = document.getElementById('moveImagesBtn-' + catName);
                    if (bulkDeleteBtn) bulkDeleteBtn.disabled = selected.length === 0;
                    if (setThumbBtn) setThumbBtn.disabled = selected.length !== 1;
                    if (moveImagesBtn) moveImagesBtn.disabled = selected.length === 0;
                }

                // Optional: Deselect all images when switching category panels
                document.querySelectorAll('.category-toggle').forEach(function (toggle) {
                    toggle.addEventListener('click', function () {
                        var catName = toggle.closest('.category-accordion').getAttribute('data-cat');
                        document.querySelectorAll('.category-accordion[data-cat="' + catName + '"] .img-item.selected')
                            .forEach(function (img) { img.classList.remove('selected'); });
                        // Also disable bulk buttons
                        var bulkDeleteBtn = document.getElementById('bulkDeleteBtn-' + catName);
                        var setThumbBtn = document.getElementById('setThumbBtn-' + catName);
                        var moveImagesBtn = document.getElementById('moveImagesBtn-' + catName);
                        if (bulkDeleteBtn) bulkDeleteBtn.disabled = true;
                        if (setThumbBtn) setThumbBtn.disabled = true;
                        if (moveImagesBtn) moveImagesBtn.disabled = true;
                    });
                });
            </script>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    document.querySelectorAll('.image-grid').forEach(function (grid) {
                        new Sortable(grid, {
                            animation: 150,
                            handle: '.img-item',
                            draggable: '.img-item',
                            onEnd: function (evt) {
                                // Save new order to server
                                const catName = grid.getAttribute('data-cat');
                                const order = Array.from(grid.querySelectorAll('.img-item')).map(div => div.dataset.filename);
                                fetch('/reorder-images', {
                                    method: 'POST',
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({ category: catName, order: JSON.stringify(order) })
                                })
                                    .then(res => res.ok ? res.json() : Promise.reject())
                                    .then(() => {
                                        // Optionally show a toast or indicator
                                        const indicator = document.getElementById('saving-indicator');
                                        if (indicator) {
                                            indicator.textContent = 'Order saved!';
                                            indicator.style.opacity = 1;
                                            setTimeout(() => { indicator.style.opacity = 0; }, 1200);
                                        }
                                    })
                                    .catch(() => {
                                        const indicator = document.getElementById('saving-indicator');
                                        if (indicator) {
                                            indicator.textContent = 'Failed to save order!';
                                            indicator.style.opacity = 1;
                                            setTimeout(() => { indicator.style.opacity = 0; }, 2000);
                                        }
                                    });
                            }
                        });
                    });
                });
            </script>
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    var fileInput = document.getElementById('image');
                    var preview = document.getElementById('preview');
                    if (fileInput && preview) {
                        fileInput.addEventListener('change', function () {
                            preview.innerHTML = '';
                            if (fileInput.files.length > 0) {
                                Array.from(fileInput.files).forEach(function (file) {
                                    if (file.type.startsWith('image/')) {
                                        var reader = new FileReader();
                                        reader.onload = function (e) {
                                            var img = document.createElement('img');
                                            img.src = e.target.result;
                                            img.className = 'preview-thumb';
                                            img.style.maxWidth = '80px';
                                            img.style.maxHeight = '80px';
                                            img.style.margin = '0.25em';
                                            preview.appendChild(img);
                                        };
                                        reader.readAsDataURL(file);
                                    }
                                });
                            }
                        });
                    }
                });
            </script>
            <script>
                function showToast(msg, timeout = 3500) {
                    const container = document.getElementById('toast-container');
                    if (!container) return;
                    const toast = document.createElement('div');
                    toast.className = 'toast';
                    toast.textContent = msg;
                    container.appendChild(toast);
                    setTimeout(() => {
                        toast.style.animation = 'toast-out 0.4s forwards';
                        setTimeout(() => toast.remove(), 400);
                    }, timeout);
                }
            </script>
</body>

</html>