<!--
  setup.ejs
  Initial setup page for configuring the site title, favicon, and accent color.
  Used for first-time setup or reconfiguration of the application.
  Includes toast notifications for error feedback.
-->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= settings.siteTitle || "Focal Point" %> - Setup
    </title>
    <% if (settings.favicon) { %>
        <% let faviconSrc=(settings.favicon.startsWith('http://') || settings.favicon.startsWith('https://') ||
            settings.favicon.startsWith('/branding/')) ? settings.favicon : ('/branding/' +
            settings.favicon.replace(/^\/uploads\//, '' )) %>
            <link rel="icon" type="image/png" href="<%= faviconSrc %>">
            <% } %>
                <link rel="stylesheet" href="/styles.css?v=<%= encodeURIComponent(settings.accentColor || '') %>">
                <style>
                    :root {
                        --primary-color: <%=settings.accentColor || '#2ecc71' %>;
                        --primary-hover: <%=settings.accentColor ? (settings.accentColor.replace('#', '%23') + 'cc'): '#27ae60' %>;
                    }
                </style>
</head>

<body>
    <%- include('partials/header', { showAdminNav: false, settings, loggedIn: false }) %>
        <!-- Removed duplicate toast-container -->
        <% if (typeof error !=='undefined' && error) { var errorMsg=(typeof error==='string' ? error : (error &&
            error.message) || String(error)); %>
            <div id="toast-data" data-msg="<%- errorMsg.replace(/&/g, '&amp;').replace(/\" /g, '&quot;'
                ).replace(/'/g, '&#39;' ).replace(/</g, '&lt;' ).replace( />/g, '&gt;') %>" style="display:none;"></div>
            <% } %>
                <script>
                    function showToast(msg, timeout = 3500) {
                        const container = document.getElementById('toast-container');
                        if (!container) return;
                        const toast = document.createElement('div');
                        toast.className = 'toast';
                        toast.textContent = msg;
                        container.appendChild(toast);
                        setTimeout(() => {
                            toast.style.animation = 'toast-out 0.4s forwards';
                            setTimeout(() => toast.remove(), 400);
                        }, timeout);
                    }
                    document.addEventListener('DOMContentLoaded', function () {
                        var toastDiv = document.getElementById('toast-data');
                        if (toastDiv && toastDiv.dataset.msg) {
                            showToast(toastDiv.dataset.msg);
                        }
                    });
                </script>
                <div class="container">
                    <form class="login-box" action="/setup" method="POST" autocomplete="off">
                        <h1>Setup Admin Account</h1>
                        <div class="form-group">
                            <label for="username" class="visually-hidden">Username</label>
                            <input type="text" id="username" name="username" placeholder="Username" required autofocus>
                        </div>
                        <div class="form-group">
                            <label for="password" class="visually-hidden">Password</label>
                            <input type="password" id="password" name="password" placeholder="Password" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Create Admin Account</button>
                    </form>
                </div>
                <%- include('partials/dark-mode-toggle') %>
</body>

</html>