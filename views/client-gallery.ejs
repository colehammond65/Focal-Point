<!-- client-gallery.ejs: Page for clients to view and download their gallery images. Includes gallery grid, lightbox, and toast notifications. -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= settings.siteTitle || "Focal Point" %> - Client Gallery
    </title>
    <% if (settings.favicon) { %>
        <% let faviconSrc=(settings.favicon.startsWith('http://') || settings.favicon.startsWith('https://') ||
            settings.favicon.startsWith('/branding/')) ? settings.favicon : ('/branding/' +
            settings.favicon.replace(/^\/uploads\//, '' )) %>;
            <link rel="icon" type="image/png" href="<%= faviconSrc %>">
            <% } %>
                <link rel="stylesheet" href="/styles.css?v=<%= encodeURIComponent(settings.accentColor || '') %>">
                <style>
                    :root {
                        --primary-color: <%=settings.accentColor || '#2ecc71' %>;
                        --primary-hover: <%=settings.accentColor ? (settings.accentColor.replace('#', '%23') + 'cc'): '#27ae60' %>;
                    }
                </style>
</head>

<body>
    <%- include('partials/header', { showAdminNav: false, settings, loggedIn: false }) %>
        <div id="toast-container" class="toast-container"></div>
        <% if (typeof req !=='undefined' && req.query && req.query.msg) { %>
            <div id="toast-data" data-msg="<%- req.query.msg.replace(/&/g, '&amp;').replace(/" /g, '&quot;'
                ).replace(/'/g, '&#39;' ).replace(/</g, '&lt;' ).replace( />/g, '&gt;') %>" style="display:none;"></div>
            <% } %>
                <script src="/js/toast.js"></script>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        var toastDiv = document.getElementById('toast-data');
                        if (toastDiv && toastDiv.dataset.msg) {
                            showToast(toastDiv.dataset.msg);
                        }
                    });
                </script>

                <div class="container">
                    <div class="client-header">
                        <div class="client-info">
                            <div>
                                <h2>
                                    <%= shootTitle || "Your Photos" %>
                                </h2>
                                <p>
                                    <%= images.length %> photo<%= images.length !==1 ? 's' : '' %> available
                                </p>
                            </div>
                            <div class="download-actions">
                                <% if (images.length> 0) { %>
                                    <a href="/client/download-all" class="download-btn">
                                        ðŸ“¦ Download All Photos
                                    </a>
                                    <% } %>
                            </div>
                        </div>
                    </div>

                    <div class="upload-section" style="margin-bottom:2em;">
                        <form action="/client/upload" method="POST" enctype="multipart/form-data"
                            class="client-upload-form">
                            <label for="clientUploadInput" class="btn btn-primary" tabindex="0"
                                style="cursor:pointer;">Select Photo(s)</label>
                            <input type="file" id="clientUploadInput" name="images" multiple
                                accept="image/png,image/jpeg,image/gif" style="display:none;"
                                onchange="validateClientImages(this)">
                            <div id="clientUploadPreview" class="preview" style="margin-top:1em;"></div>
                            <button type="submit" class="btn btn-success" style="margin-top:1em;">Upload</button>
                        </form>
                    </div>

                    <div class="gallery-container">
                        <% if (images && images.length> 0) { %>
                            <div class="gallery-grid">
                                <% images.forEach((image, idx)=> { %>
                                    <img class="gallery-thumb-img"
                                        src="/client-images/<%= clientId %>/<%= image.filename %>?w=300"
                                        alt="<%= image.original_filename || ('Photo ' + (idx + 1)) %>" loading="lazy" />
                                    <% }); %>
                            </div>
                            <% } else { %>
                                <div class="empty-state">
                                    <h3>No photos available yet</h3>
                                    <p>Your photographer hasn't uploaded any photos yet. Please check back later.</p>
                                </div>
                                <% } %>
                    </div>

                    <!-- Lightbox for viewing images -->
                    <div id="lightbox" class="lightbox" role="dialog" aria-modal="true">
                        <button class="close-btn" id="closeBtn" aria-label="Close">&times;</button>
                        <div class="lightbox-inner">
                            <img id="lightboxImg" src="" alt="">
                            <div id="lightboxAlt" class="lightbox-alt"></div>
                        </div>
                    </div>
                </div>

                <%- include('partials/dark-mode-toggle') %>

                    <script>
                        // Lightbox functionality for gallery images
                        document.addEventListener('DOMContentLoaded', function () {
                            const images = document.querySelectorAll('.gallery-thumb-img');
                            const lightbox = document.getElementById('lightbox');
                            const lightboxImg = document.getElementById('lightboxImg');
                            const closeBtn = document.getElementById('closeBtn');
                            const altBox = document.getElementById('lightboxAlt');

                            images.forEach(img => {
                                img.addEventListener('click', (e) => {
                                    e.preventDefault();
                                    lightboxImg.src = img.src;
                                    lightboxImg.alt = img.alt;
                                    lightbox.style.display = 'flex';
                                    document.body.classList.add('lightbox-open');
                                    closeBtn.focus();
                                    if (img.alt && img.alt.trim() !== '') {
                                        altBox.textContent = img.alt;
                                        altBox.style.display = '';
                                    } else {
                                        altBox.textContent = '';
                                        altBox.style.display = 'none';
                                    }
                                });
                            });

                            function closeLightbox() {
                                lightbox.style.display = 'none';
                                lightboxImg.src = '';
                                document.body.classList.remove('lightbox-open');
                            }

                            closeBtn.addEventListener('click', closeLightbox);

                            document.addEventListener('keydown', (e) => {
                                if (e.key === 'Escape') {
                                    closeLightbox();
                                }
                            });

                            lightbox.addEventListener('click', (e) => {
                                if (e.target === lightbox) {
                                    closeLightbox();
                                }
                            });

                            // Fade-in effect for lazy-loaded images
                            document.querySelectorAll('.gallery-thumb-img[loading="lazy"]').forEach(img => {
                                img.addEventListener('load', () => {
                                    img.setAttribute('data-loaded', 'true');
                                });
                                if (img.complete) {
                                    img.setAttribute('data-loaded', 'true');
                                }
                            });

                            // Preview functionality for image uploads
                            const fileInput = document.getElementById('clientUploadInput');
                            const preview = document.getElementById('clientUploadPreview');
                            const label = document.querySelector('label[for="clientUploadInput"]');
                            if (label && fileInput) {
                                label.addEventListener('keydown', function (e) {
                                    if (e.key === 'Enter' || e.key === ' ') {
                                        e.preventDefault();
                                        fileInput.click();
                                    }
                                });
                                label.addEventListener('click', function (e) {
                                    fileInput.click();
                                });
                            }
                            if (fileInput && preview) {
                                fileInput.addEventListener('change', function () {
                                    preview.innerHTML = '';
                                    if (fileInput.files && fileInput.files.length > 0) {
                                        Array.from(fileInput.files).forEach(file => {
                                            if (file.type.startsWith('image/')) {
                                                const reader = new FileReader();
                                                reader.onload = function (e) {
                                                    const img = document.createElement('img');
                                                    img.src = e.target.result;
                                                    img.alt = file.name;
                                                    img.style.maxWidth = '70px';
                                                    img.style.maxHeight = '70px';
                                                    img.style.margin = '0.2em';
                                                    preview.appendChild(img);
                                                };
                                                reader.readAsDataURL(file);
                                            }
                                        });
                                    }
                                });
                            }
                        });

                        // Client-side validation for image uploads
                        function validateClientImages(input) {
                            const maxFiles = 20;
                            const maxSize = 10 * 1024 * 1024; // 10MB
                            const allowedTypes = ['image/png', 'image/jpeg', 'image/gif'];
                            if (input.files.length > maxFiles) {
                                alert('You can upload up to 20 images at a time.');
                                input.value = '';
                                return false;
                            }
                            for (let file of input.files) {
                                if (!allowedTypes.includes(file.type)) {
                                    alert('Invalid file type: ' + file.type);
                                    input.value = '';
                                    return false;
                                }
                                if (file.size > maxSize) {
                                    alert('File too large: ' + file.name);
                                    input.value = '';
                                    return false;
                                }
                            }
                            return true;
                        }
                    </script>
</body>

</html>